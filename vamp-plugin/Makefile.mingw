##  -*- mode:makefile -*-
## NB: on linux, do a make clean whenever there are significant changes to the class structure
## of any plugin.
##
##  Skeleton Makefile for Vamp plugin builds using command-line tools.
##
##  Rename this to Makefile, and edit as appropriate.
##  This Makefile WILL NOT WORK until you have edited it as described
##  below -- the Makefile as supplied does nothing useful at all!
##
##  Various sets of options are provided, commented out -- just uncomment
##  (remove the '#' characters for) the set that most closely resembles
##  your own situation, and adjust to taste.  Then run "make".
##
##  (For Windows builds using MS Visual Studio, start instead with the
##  VampExamplePlugins project found in the build directory of the SDK.)


# Edit this to the base name of your plugin library
#
PLUGIN_LIBRARY_NAME = lotek-plugins

# Edit this to list one .o file for each .cpp file in your plugin project
#
PLUGIN_CODE_OBJECTS = FindPulse.o FindPulseBatch.o AveragePower.o

# Edit this to the location of the Vamp plugin SDK, relative to your
# project directory
#
VAMP_SDK_INCLUDE_DIR = /usr/include/vamp-sdk
VAMP_SDK_LIB_DIR = /usr/local/lib

BOOST_INCLUDE_DIR = /usr/local/include/boost-1_46_1

##  Uncomment these for an OS/X native build using command-line tools:

# CXXFLAGS = -I$(VAMP_SDK_DIR) -Wall -fPIC
# PLUGIN_EXT = .dylib
# PLUGIN = $(PLUGIN_LIBRARY_NAME)$(PLUGIN_EXT)
# LDFLAGS = -dynamiclib -install_name $(PLUGIN) $(VAMP_SDK_DIR)/libvamp-sdk.a -exported_symbols_list vamp-plugin.list


##  Uncomment these for an OS/X universal binary using command-line tools:

# CXXFLAGS = -isysroot /Developer/SDKs/MacOSX10.4u.sdk -arch i386 -arch ppc -I$(VAMP_SDK_DIR) -Wall -fPIC
# PLUGIN_EXT = .dylib
# PLUGIN = $(PLUGIN_LIBRARY_NAME)$(PLUGIN_EXT)
# LDFLAGS = -dynamiclib -install_name $(PLUGIN) $(VAMP_SDK_DIR)/libvamp-sdk.a -exported_symbols_list vamp-plugin.list



## build under MinGW in Windows

R_INCLUDE_DIR = c:/Program Files/R/R-2.13.0/include
RCPP_INCLUDE_DIR = c:/Users/john/Documents/R/win-library/2.13/Rcpp/include
R_LIB_DIR = c:/Program Files/R/R-2.13.0/bin/i386
R_VERSION=2.13.0
##RLIB = "-L/$(R_LIB_DIR)" -lR -Wl,--kill-at,--enable-stdcall-fixup,--enable-auto-import
RLIB = "$(R_LIB_DIR)/R.dll" -Lc:/Users/john/Documents/R/win-library/2.13/Rcpp/lib/i386/ -lRcpp

CXXFLAGS = -I$(VAMP_SDK_INCLUDE_DIR) "-I$(R_INCLUDE_DIR)" "-I$(RCPP_INCLUDE_DIR)" -Wall -fPIC -O2 -I$(BOOST_INCLUDE_DIR) -DWIN32
PLUGIN_EXT = .dll
PLUGIN = $(PLUGIN_LIBRARY_NAME)$(PLUGIN_EXT)
LDFLAGS = -static -shared -Wl,-soname=$(PLUGIN) $(VAMP_SDK_LIB_DIR)/libvamp-sdk.a -Wl,--version-script=vamp-plugin.map -lasprintf


##  Uncomment these for a cross-compile from Linux to Windows using MinGW:

# CXX = i586-mingw32msvc-g++
# CXXFLAGS = -I$(VAMP_SDK_DIR) -Wall 
# PLUGIN_EXT = .dll
# PLUGIN = $(PLUGIN_LIBRARY_NAME)$(PLUGIN_EXT)
# LDFLAGS = --static-libgcc -Wl,-soname=$(PLUGIN) -shared $(VAMP_SDK_DIR)/libvamp-sdk.a


##  Uncomment these for OpenSolaris using SunStudio compiler and GNU make:

# CXX = CC
# CXXFLAGS = -G -I$(VAMP_SDK_DIR) +w -KPIC
# PLUGIN_EXT = .so
# PLUGIN = $(PLUGIN_LIBRARY_NAME)$(PLUGIN_EXT)
# LDFLAGS = -G -h$(PLUGIN) $(VAMP_SDK_DIR)/libvamp-sdk.a -Qoption ld -Mvamp-plugin.map



##  All of the above
all: $(PLUGIN)

$(PLUGIN): $(PLUGIN_CODE_OBJECTS) lotek-plugins.o
	   $(CXX) -o $@ $^ $(LDFLAGS)

lotek-plugins.o: $(PLUGIN_CODE_OBJECTS) lotek-plugins.cpp

FindPulse.o: MovingAverager.h

FindPulseBatch.o: MovingAverager.h

clean:
	rm -f *.o

